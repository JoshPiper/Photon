name: Build Release

on:
  workflow_dispatch:
    inputs:
#      version:
#        required: true
#        description: New version ID (eg. v75)
      bump:
        required: false
        description: Version type to bump (major / minor)
        default: major

jobs:
  permission-check:
    runs-on: ubuntu-latest
    name: Check Actor Permissions
    steps:
      - name: Check Permission
        uses: scherermichael-oss/action-has-permission@1.0.5
        id: permission
        with:
          required-permission: "admin"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Permission Check Failed
        if: steps.permission.outputs.has-permission == ''
        run: exit 1

  prepare-version:
    runs-on: ubuntu-latest
    name: Generate New Version
    needs: [permission-check]
    outputs:
      series_last: ${{ steps.bump.outputs.last }}
      series_id: ${{ steps.bump.outputs.next }}
      series_int: ${{ steps.bump.outputs.numeric }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Dependencies
        working-directory: .github/tag_bump
        run: npm i
      - name: Bump Version
        id: bump
        uses: ./.github/tag_bump
        with:
          owner: JoshPiper
          token: ${{ github.token }}
          bump: ${{ github.event.inputs.bump }}

  prepare-series:
    runs-on: ubuntu-latest
    name: Generate Series Title
    needs: [prepare-version]
    outputs:
      series_title: ${{ steps.title.outputs.series }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b "release/${{ needs.prepare-version.outputs.series_id }}/title"
      - name: Install Dependencies
        working-directory: .github/photon_title
        run: npm i
      - name: Generate Series Title
        uses: ./.github/photon_title
        id: title
        with:
          next: ${{ needs.prepare-version.outputs.series_id }}
      - name: Commit Updated Files
        run: |
          git add .github/photon_title/used.json
          git commit -m "chore(release): update used.json"
          git push --set-upstream origin "release/${{ needs.prepare-version.outputs.series_id }}/title"

  generate-changelog:
    runs-on: ubuntu-latest
    name: Prepare Changelog
    needs: [prepare-version, prepare-series]
    outputs:
      changelog: ${{ steps.changelog.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install Dependencies
        working-directory: .github/build_changelogs
        run: npm i
      - name: Write Changelog
        uses: ./.github/build_changelogs
        id: changelog
        with:
          token: ${{ github.token }}
          before: ${{ needs.prepare-version.outputs.series_last }}
          after: ${{ needs.prepare-version.outputs.series_id }}
          title: ${{ needs.prepare-series.outputs.series_title }}

  update-config:
    runs-on: ubuntu-latest
    name: Update Configuration Files
    needs: [prepare-version, prepare-series]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b "release/${{ needs.prepare-version.outputs.series_id }}/config"
      - name: Prepare Updated Photon Config
        run: |
          perl -i -p -e "s/PHOTON_UPDATE = (\d+.?\d*)/PHOTON_UPDATE = ${{ needs.prepare-version.outputs.series_int }}/" lua/autorun/photon/sh_emv_config.lua
          perl -i -p -e "s/PHOTON_SERIES = \"[\w .]+\"/PHOTON_SERIES = \"${{ needs.prepare-series.outputs.series_title }}\"/" lua/autorun/photon/sh_emv_config.lua
      - name: Commit Updated Photon Config
        run: |
          git add lua/autorun/photon/sh_emv_config.lua
          git commit -m "chore(release): update photon config files"
          git push --set-upstream origin "release/${{ needs.prepare-version.outputs.series_id }}/config"

  update-documentation:
    runs-on: ubuntu-latest
    name: Update Documentation
    needs: [prepare-version, prepare-series]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b "release/${{ needs.prepare-version.outputs.series_id }}/docs"
      - name: Update File Headers
        run: find lua -type f -iname '*lua' | xargs perl -i -p -e "s/^\@release(.*)$/\@release ${{ needs.prepare-version.outputs.series_id }} ${{ needs.prepare-series.outputs.series_title }}/"
      - name: Commit Updated Files
        run: |
          git add lua/**.lua
          git commit -m "chore(release): update file headers"
          git push --set-upstream origin "release/${{ needs.prepare-version.outputs.series_id }}/docs"
      - name: Install Lua
        uses: leafo/gh-actions-lua@v8.0.0
      - name: Install Luarocks
        uses: leafo/gh-actions-luarocks@v4.0.0
      - name: Install LDoc
        run: |
          luarocks install luafilesystem
          luarocks install penlight
          luarocks install markdown
          luarocks install argparse
          luarocks install ldoc
      - name: Build Documentation
        run: ldoc -M -c ./config.ld -t 'Photon Lighting Engine' -d ./docs ./lua
      - name: Commit Updated Documentation
        run: |
          git add docs/**
          git commit -m "chore(release): update documentation"
          git push --set-upstream origin "release/${{ needs.prepare-version.outputs.series_id }}/docs"

  merge-branches:
    runs-on: ubuntu-latest
    name: Merge Release Branches
    needs: [prepare-version, prepare-series, update-config, update-documentation]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b -b "release/${{ needs.prepare-version.outputs.series_id }}/merge"
      - name: Merge Series Name File
        run: |
          git pull "release/${{ needs.prepare-version.outputs.series_id }}/title"
          git checkout "release/${{ needs.prepare-version.outputs.series_id }}/title"
          git rebase "release/${{ needs.prepare-version.outputs.series_id }}/merge"
          git branch -D "release/${{ needs.prepare-version.outputs.series_id }}/title"
          git push -d origin "release/${{ needs.prepare-version.outputs.series_id }}/title"
      - name: Merge Updated Config
        run: |
          git pull "release/${{ needs.prepare-version.outputs.series_id }}/config"
          git checkout "release/${{ needs.prepare-version.outputs.series_id }}/config"
          git rebase "release/${{ needs.prepare-version.outputs.series_id }}/merge"
          git branch -D "release/${{ needs.prepare-version.outputs.series_id }}/config"
          git push -d origin "release/${{ needs.prepare-version.outputs.series_id }}/config"
      - name: Merge Updated Documentation
        run: |
          git pull "release/${{ needs.prepare-version.outputs.series_id }}/docs"
          git checkout "release/${{ needs.prepare-version.outputs.series_id }}/docs"
          git rebase "release/${{ needs.prepare-version.outputs.series_id }}/merge"
          git branch -D "release/${{ needs.prepare-version.outputs.series_id }}/docs"
          git push -d origin "release/${{ needs.prepare-version.outputs.series_id }}/docs"
      - name: Push Release Candidate
        run: |
          git branch -m "release/${{ needs.prepare-version.outputs.series_id }}/merge" "release/${{ needs.prepare-version.outputs.series_id }}"
          git push --set-upstream origin "release/${{ needs.prepare-version.outputs.series_id }}"


#
#  prepare-release:
#    runs-on: ubuntu-latest
#    name: Prepare Release Data
#    outputs:
#      series_title: ${{ steps.title.outputs.series }}
#      series_id: ${{ steps.bump.outputs.next
#      series_int: ${{ steps.bump.outputs.numeric }}
#      changelog: ${{ steps.changelog.outputs.changelog }}
#    steps:
#      - name: Check Permission
#        uses: scherermichael-oss/action-has-permission@1.0.5
#        id: permission
#        with:
#          required-permission: "admin"
#      - name: Cancel if Permission Check Fails
#        if: steps.permission.outputs.has-permission == ""
#        run: exit 1
#
#      - name: Prepare Git
#        run: |
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#      - name: Install Deps
#        run: |
#          cd .github/tag_bump && npm i && cd ../..
#          cd .github/build_changelogs && npm i && cd ../..
#          cd .github/photon_title && npm i && cd ../..
#      - name: Bump Version
#        id: bump
#        uses: ./.github/tag_bump
#        with:
#          owner: JoshPiper
#          token: ${{ github.token }}
#          bump: ${{ github.event.inputs.bump }}
#      - name: Setup Release Branch
#        run: git checkout -b "release/${{ steps.bump.outputs.next }}"
#      - name: Write Changelog
#        uses: ./.github/build_changelogs
#        id: changelog
#        with:
#          token: ${{ github.token }}
#          before: ${{ steps.bump.outputs.last }}
#          after: ${{ steps.bump.outputs.next }}
#      - name: Generate Series Title
#        uses: ./.github/photon_title
#        id: title
#        with:
#          next: ${{ steps.bump.outputs.next }}
#      - name: Commit Updated used.json
#        run: "git add .github/photon_title/used.json && git commit -m \"chore(release): update used.json\""
#
#      - name: Prepare Updated Doc-Blocks
#        run: find lua -type f -iname '*lua' | xargs perl -i -p -e "s/^\@release(.*)$/\@release ${{ steps.bump.outputs.next }} ${{ steps.title.outputs.series }}/"
#      - name: Commit Updated Doc-Blocks
#        run: "git add lua/**.lua && git commit -m \"chore(release): update version doc-blocks\""
#      - name: Push Release Candidate
#        run: git push --set-upstream origin "release/${{ steps.bump.outputs.next }}"

